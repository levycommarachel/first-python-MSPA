#Joanne sells silk-screened t-shirts at a community festival.  
#Her marginal cost to produce one t-shirt is $3.50.  
#Her total cost to produce 60 t-shirts is $300, and she sells them for $7 each.  
#Use Python to graph this information and determine the number of t-shirts Joanne must produce and sell to break even.

import matplotlib.pyplot
from matplotlib.pyplot import *
import numpy 
from numpy import linspace

figure()
x=linspace(0,100,100)
y1=3.5*x +90
y2=7*x

plot(x,y2,color='b', label='Price of Shirt')
plot(x,y1,color='r', label= 'Total Cost')

title ('T-shirt Sale Break Even')
show()

#################################################
#A pharmacist mixes together three types of vitamin tablets.  
#Each tablet A contains, among other things, 13 mg of niacin and 11 IU of vitamin E.  
#The amounts for a tablet B are 18 mg and 14 IU, and for a tablet C are 23 mg and 36 IU.  
#Use Python to determine how many of each tablet there are if there are 225 total tablets, 4300 mg of niacin, and 5200 IU of vitamin E.

import numpy 
from numpy import *
from numpy.linalg import *

M= [[1, 1, 1], [13, 18, 23], [11, 14, 36]]
M= matrix(M)
O= [225, 4300, 5200]
result= linalg.solve(M,O)
print ('\nDaily Orders\n')
print int_(result)

[50 74 99]

Answer=
50 tablets of a, 74 tablets of b, and 99 tablets of c


#################################################
#The following is a graph of a third degree polynomial with leading coefficient 1.  
#Determine the function depicted in the graph.  Using Python, recreate the graph of the original function,  
#f(x), as well as the graph of its derivative.


#Original function= the inverse of the x-intercepts or (x+3)*(x+1)*(x-2)

import matplotlib.pyplot 
from matplotlib.pyplot import *
import numpy 
from numpy import poly1d, linspace

figure()
p=poly1d([1,3,1,2,])
print ('\nThird Degree Polynomial') 
print p
print ('\nFirst Derivative')
g= p.deriv(m=1) 
print g

x=linspace(-4,4,1000)
y=linspace(-20,70,1000)
y=(x+3)*(x+1)*(x-2)
yg=g(x) 

y0=0*x 
xlim(-4,4)
ylim(-20,70)
x1 = [-3,-1,2]
y1 = [0,0,0]
plot(x1, y1, marker='o', color='r')
x2 = [-2,1]
y2 = [4,-8]
plot(x2, y2, marker='o',linestyle = 'None', color='y')
plot (x,y,label ='y=p(x)')
plot (x,yg,label ='First Derivative')

legend(loc='best')

plot (x,y0)
xlabel('x-axis')
ylabel('y-axis')
title ('Plot Showing Polynomial')
show()

#################################################
#Using data in a car magazine, we constructed the mathematical model
#y=100e-0.0482t
#for the percentage of cars of a certain type still on the road after t years.  
#Using Python, determine the rate of change of the percent of cars still on the road after 5 years.

import numpy as np
from scipy.misc import derivative
import math
from math import e 

def f(x):
value = 100*e**(-0.0482*x) 
return value
result = derivative(f, 5., dx=0.01)
print result

